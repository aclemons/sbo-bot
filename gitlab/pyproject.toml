[tool.poetry]
name = "sbobot"
version = "0.0.1"
description = ""
authors = ["Andrew Clemons <andrew.clemons@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "3.11.9"

aiohttp = "3.10.5"
boto3 = "1.35.19"
fastapi-slim = "0.114.0"
orjson = "3.10.7"
python-gitlab = "4.10.0"
structlog = "24.4.0"
uvicorn = {version = "0.30.6", extras = ["standard"]}
yarl = "1.10.0"

[tool.poetry.group.dev.dependencies]
boto3-stubs-lite = { version = "1.35.19", extras = ["ssm"] }
pyright = "1.1.379"
pytest = "8.3.2"
pytest-dotenv = "0.5.2"
ruff = "0.6.4"
ruff-lsp = "0.0.56"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
reportUnnecessaryTypeIgnoreComment = "error"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
env_override_existing_values = 1
env_files = [".test.env"]
filterwarnings = ["error"]

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
 "D", # disable docstring checks
 "E501", # black handles long line wrapping
 "COM812", # conflicts with ruff format
 "ISC001", # conflicts with ruff format
 "ANN101", # deprecated and will be removed in a future ruff release
 "ANN102", # deprecated and will be removed in a future ruff release
]
target-version = "py311"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Security"]

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101", # allow assert in tests
]

[tool.ruff.lint.pylint]
max-branches = 30
max-statements = 60
