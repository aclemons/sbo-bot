[project]
name = "sbobot"
version = "0.0.1"
description = ""
requires-python = "==3.11.10"

dependencies = [
  "aiohttp==3.10.9",
  "boto3==1.35.34",
  "fastapi-slim==0.115.0",
  "orjson==3.10.7",
  "python-gitlab==4.12.2",
  "structlog==24.4.0",
  "uvicorn[standard]==0.31.0",
  "yarl==1.13.1",
]

[tool.uv]
dev-dependencies = [
  "boto3-stubs-lite[ssm]==1.35.34",
  "pyright==1.1.383",
  "pytest==8.3.3",
  "pytest-dotenv==0.5.2",
  "ruff==0.6.8",
  "ruff-lsp==0.0.57",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
reportMissingTypeStubs = "none"
reportUnnecessaryTypeIgnoreComment = "error"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
env_override_existing_values = 1
env_files = [".test.env"]
filterwarnings = ["error"]

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
 "D", # disable docstring checks
 "E501", # black handles long line wrapping
 "COM812", # conflicts with ruff format
 "ISC001", # conflicts with ruff format
 "ANN101", # deprecated and will be removed in a future ruff release
 "ANN102", # deprecated and will be removed in a future ruff release
]
target-version = "py311"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Security"]

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101", # allow assert in tests
]

[tool.ruff.lint.pylint]
max-branches = 30
max-statements = 60
